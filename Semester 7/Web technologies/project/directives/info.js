const filterDetails = {
    lowpass: {
        title: "Low-pass Филтър",
        description: "Low-pass филтърът пропуска честоти под определена стойност (наречена честота на прекъсване), като потиска честотите над този праг. Този филтър често се използва за премахване на високочестотен шум или за създаване на ефект на „приглушен“ звук чрез намаляване на високите тонове.",
        howItWorks: "Филтърът използва математическа крива за намаляване на амплитудата на честотите над cutoff точката. Параметърът Q контролира остротата на това намаляване – по-високи стойности на Q създават по-рязък спад.",
        applications: [
            "Премахване на шумове с висока честота в аудио записи.",
            "Усилване на басовите честоти в електронна музика.",
            "Създаване на звук, който симулира слушане през стени или под вода."
        ],
        characteristics: [
            "<strong>Честота на прекъсване (Frequency):</strong> Честотата, която определя кои честоти ще бъдат потиснати.",
            "<strong>Качество на филтъра (Q):</strong> Контролира ширината на честотния диапазон около cutoff."
        ],
        parameters: [
            "<strong>frequency:</strong> Честотата на прекъсване, която определя кои честоти ще бъдат потиснати.",
            "<strong>Q:</strong> Качество на филтъра, което контролира ширината на честотния диапазон около cutoff."
        ],
        code: `
    const audioContext = new AudioContext();
    const filterNode = audioContext.createBiquadFilter();
    
    filterNode.type = "lowpass";
    filterNode.frequency.value = 1000; // Честота на прекъсване: 1000 Hz
    filterNode.Q.value = 1;           // Качество на филтъра
        `
    },

    highpass: {
        title: "High-pass Филтър",
        description: "High-pass филтърът пропуска честоти над определена стойност (cutoff frequency), като потиска честотите под този праг. Този филтър е противоположен на Low-pass и често се използва за премахване на нискочестотен шум.",
        howItWorks: "Филтърът използва математическа крива за намаляване на амплитудата на честотите под cutoff точката. Параметърът Q контролира остротата на това намаляване – по-високи стойности на Q създават по-рязък спад.",
        applications: [
            "Премахване на нискочестотни шумове в записи на живо.",
            "Подобряване на яснотата на вокали чрез намаляване на ниските честоти.",
            "Създаване на ефекти като 'телефонен' звук."
        ],
        characteristics: [
            "<strong>Честота на прекъсване (Frequency):</strong> Честотата, която определя кои честоти ще бъдат потиснати.",
            "<strong>Качество на филтъра (Q):</strong> Контролира ширината на честотния диапазон около cutoff."
        ],
        parameters: [
            "<strong>frequency:</strong> Честотата на прекъсване, която определя кои честоти ще бъдат потиснати.",
            "<strong>Q:</strong> Качество на филтъра, което контролира ширината на честотния диапазон около cutoff."
        ],
        code: `
    const audioContext = new AudioContext();
    const filterNode = audioContext.createBiquadFilter();
    
    filterNode.type = "highpass";
    filterNode.frequency.value = 1000; // Честота на прекъсване: 1000 Hz
    filterNode.Q.value = 1;           // Качество на филтъра
        `
    },

    bandpass: {
        title: "Band-pass Филтър",
        description: "Band-pass филтърът пропуска честоти в определен диапазон, като потиска всички честоти извън него. Този филтър е полезен за изолиране на специфичен честотен обхват, като например средните честоти на китарата или вокалния диапазон.",
        howItWorks: "Филтърът използва две cutoff честоти – долна и горна, за да ограничи честотния обхват, който ще бъде пропуснат. Параметърът Q определя ширината на честотния диапазон – по-високи стойности на Q означават по-тесен обхват.",
        applications: [
            "Изолиране на специфични честоти в микс.",
            "Премахване на нежелани смущения извън определен честотен диапазон.",
            "Създаване на sweep ефекти в електронна музика."
        ],
        characteristics: [
            "<strong>Централна честота (Frequency):</strong> Честотата, около която филтърът пропуска звука.",
            "<strong>Качество на филтъра (Q):</strong> Определя ширината на честотния диапазон около централната честота."
        ],
        parameters: [
            "<strong>frequency:</strong> Централната честота, около която филтърът пропуска звука.",
            "<strong>Q:</strong> Определя ширината на честотния диапазон."
        ],
        code: `
    const audioContext = new AudioContext();
    const filterNode = audioContext.createBiquadFilter();

    filterNode.type = "bandpass";
    filterNode.frequency.value = 1000; // Централна честота: 1000 Hz
    filterNode.Q.value = 1;           // Качество на филтъра
        `
    },

    notch: {
        title: "Notch Филтър",
        description: "Notch филтърът потиска честоти в определен диапазон, като пропуска всички честоти извън него. Този филтър често се използва за премахване на нежелани честоти, като например шум от електропреносна мрежа.",
        howItWorks: "Филтърът използва две cutoff честоти, за да дефинира диапазона, който ще бъде потиснат. Параметърът Q контролира ширината на честотния диапазон – висок Q означава тесен диапазон, идеален за премахване на конкретни честоти.",
        applications: [
            "Елиминиране на 50Hz шум от електрически мрежи.",
            "Потискане на нежелани резонанси в инструменти.",
            "Контролиране на обратна връзка при записи на живо."
        ],
        characteristics: [
            "<strong>Централна честота (Frequency):</strong> Честотата, която филтърът заглушава.",
            "<strong>Качество на филтъра (Q):</strong> Контролира ширината на диапазона, който се потиска."
        ],
        parameters: [
            "<strong>frequency:</strong> Централната честота, която филтърът потиска.",
            "<strong>Q:</strong> Контролира ширината на диапазона, който се потиска."
        ],
        code: `
    const audioContext = new AudioContext();
    const filterNode = audioContext.createBiquadFilter();

    filterNode.type = "notch";
    filterNode.frequency.value = 1000; // Централна честота: 1000 Hz
    filterNode.Q.value = 1;           // Качество на филтъра
        `
    },

    allpass: {
        title: "All-pass Филтър",
        description: "All-pass филтърът пропуска всички честоти, но променя фазовите им отношения. Това го прави полезен за коригиране на фазови измествания или за създаване на фазови ефекти.",
        howItWorks: "Филтърът променя фазата на честотите около cutoff точката, без да влияе на амплитудата. Параметърът Q определя степента на промяната на фазата.",
        applications: [
            "Корекция на фазови измествания при многомикрофонни записи.",
            "Създаване на фазови ефекти като фленджър или фейзър.",
            "Подобряване на стерео ширината на миксове."
        ],
        characteristics: [
            "<strong>Централна честота (Frequency):</strong> Честотата, около която фазата се променя най-много.",
            "<strong>Качество на филтъра (Q):</strong> Определя степента на промяната на фазата."
        ],
        parameters: [
            "<strong>frequency:</strong> Централната честота, около която фазата се променя.",
            "<strong>Q:</strong> Контролира степента на промяната на фазата."
        ],
        code: `
    const audioContext = new AudioContext();
    const filterNode = audioContext.createBiquadFilter();
    
    filterNode.type = "allpass";
    filterNode.frequency.value = 1000; // Централна честота: 1000 Hz
    filterNode.Q.value = 1;           // Качество на филтъра
        `
    },
    
    peaking: {
        title: "Peaking Филтър",
        description: "Peaking филтърът усилва или отслабва честоти в тесен диапазон около централната честота. Използва се за фина настройка на честотния баланс в миксове.",
        howItWorks: "Филтърът усилва или потиска честотите около централната точка. Параметърът gain контролира размера на усилването или намаляването, а Q определя ширината на засегнатия диапазон.",
        applications: [
            "Подчертаване на вокалите в микс.",
            "Намаляване на неприятните резонанси в инструменти.",
            "Усилване на специфични честоти за по-голяма яснота."
        ],
        characteristics: [
            "<strong>Централна честота (Frequency):</strong> Честотата, около която филтърът работи.",
            "<strong>Качество на филтъра (Q):</strong> Определя ширината на честотния диапазон.",
            "<strong>Усилване (Gain):</strong> Определя степента на усилване или намаляване."
        ],
        parameters: [
            "<strong>frequency:</strong> Централната честота, която се усилва или намалява.",
            "<strong>Q:</strong> Контролира ширината на честотния диапазон.",
            "<strong>gain:</strong> Определя размера на усилването или намаляването."
        ],
        code: `
    const audioContext = new AudioContext();
    const filterNode = audioContext.createBiquadFilter();
    
    filterNode.type = "peaking";
    filterNode.frequency.value = 1000; // Централна честота: 1000 Hz
    filterNode.Q.value = 1;           // Качество на филтъра
    filterNode.gain.value = 5;        // Усилване: +5 dB
        `
    },
    
    lowshelf: {
        title: "Low-shelf Филтър",
        description: "Low-shelf филтърът усилва или потиска честоти под определена стойност, като оставя високите честоти непроменени. Идеален за контрол на басовите честоти.",
        howItWorks: "Филтърът прилага постепенно усилване или потискане под cutoff точката. Параметърът gain определя степента на ефекта.",
        applications: [
            "Усилване на басовете в танцова музика.",
            "Потискане на нискочестотен шум за по-чист микс.",
            "Добавяне на топлина към записи."
        ],
        characteristics: [
            "<strong>Честота на прекъсване (Frequency):</strong> Честотата, под която се прилага ефектът.",
            "<strong>Усилване (Gain):</strong> Определя степента на усилване или намаляване."
        ],
        parameters: [
            "<strong>frequency:</strong> Честотата, под която се прилага ефектът.",
            "<strong>gain:</strong> Контролира степента на усилване или намаляване."
        ],
        code: `
    const audioContext = new AudioContext();
    const filterNode = audioContext.createBiquadFilter();
    
    filterNode.type = "lowshelf";
    filterNode.frequency.value = 200; // Честота на прекъсване: 200 Hz
    filterNode.gain.value = 5;        // Усилване: +5 dB
        `
    },
    
    highshelf: {
        title: "High-shelf Филтър",
        description: "High-shelf филтърът усилва или потиска честоти над определена стойност, като оставя ниските честоти непроменени. Често се използва за контрол на високите честоти.",
        howItWorks: "Филтърът усилва или потиска честотите над cutoff точката. Параметърът gain определя интензитета на ефекта.",
        applications: [
            "Добавяне на въздух към вокали.",
            "Потискане на сурови високи честоти.",
            "Подобряване на яснота в микс."
        ],
        characteristics: [
            "<strong>Честота на прекъсване (Frequency):</strong> Честотата, над която се прилага ефектът.",
            "<strong>Усилване (Gain):</strong> Определя степента на усилване или намаляване."
        ],
        parameters: [
            "<strong>frequency:</strong> Честотата, над която се прилага ефектът.",
            "<strong>gain:</strong> Контролира степента на усилване или намаляване."
        ],
        code: `
    const audioContext = new AudioContext();
    const filterNode = audioContext.createBiquadFilter();
    
    filterNode.type = "highshelf";
    filterNode.frequency.value = 3000; // Честота на прекъсване: 3000 Hz
    filterNode.gain.value = -5;       // Усилване: -5 dB
        `
    },    
};
