1.1
Частична функция - дефиниция
!f(x1, . . . , xn) - дефиниция
Dom(f) - дефиниция
Тотална функция - дефиниция

1.1.1
α(x) ~= β(x) - дефиниция
Графика на функция - дефиниция
Равенство на 2 функции - дефиниция

1.1.2
f <= g - дефиниция


1.2.1
Базисни примитивно рекурсивни функции - кои са

1.2.2
Базисни операции - кои са и дефиниции
g от Fn и h от Fn+2 определят еднозначно, примитивно рекурсивната функция f - доказателство

1.2.3
Примитивно рекурсивна функция - дефиниция (3 точки)
Всяка примитивно рекурсивна функция е тотална - доказателство

1.3 
Частично рекурсивни функции - дефиниции
Минимизация - дефиниция
Рекурсивна функция - дефиниция

1.4
g(X1, . . . , Xn) =~ f(Xi1, . . . , Xik) - доказателство
Константната функция C е примитивно рекурсивна - доказателство

Примитивно рекурсивни са : - доказателства
f(x, y) = x + y
g(x, y) = x.y
h(x, y) = x^y
p(x) = x .− 1
p(x) = x .− y
sg(x) 
~sg(x)
|x − y|
max(x, y)
min(x, y)

1.5
Примитивно рекурсивни предикати - дефиниция
Характеристична функция предикат - дефиниция
НДУ за примитивната рекурсивност - доказателство
Предикатите = и < са примитивно рекурсивни - доказателство
Булевите операции са примитивно рекурсивни (и, или, не) - доказателство

1.5.3
Ограничените квантори са примитивно рекурсивни - доказателство 
q(x, y) ⇐⇒ ∃z: z≤y p(x, z)
r(x, y) ⇐⇒ ∀z: z≤y p(x, z)


1.6
Операция разглеждане на случаи (case) - дефиниция
Тя запазва примитивната рекурсивност - доказателство
Ако g се различава в краен брой точки от f, то ако f е рекурсивно премитивна то и g е такава - доказателство

1.6.2
Ограничена сума и произведение запазва примитивната рекурсивност - доказателство

1.6.3
Ограничена минимизация - дефиниция
Ограчената минимазиция запазва примитивната рекурсивност - доказателство

Примитивно рекурсивна функции - доказателства
qt(x, y) = round(x/y) 
rem(x, y) = x%y
div(x, y) ⇐⇒ x > 0 & x дели y
pr(x) ⇐⇒ x ≥ 2 & x е просто
p(x) = x-тото просто
(x)y = степента с която py участва в разлгането на x


1.7.1
Задачи:
ДСД че фибоначи е примитивно еркурсивна функция
ДСД че двата принципа на индукция са еквивалентни

1.7.2
История на f - дефиниция
f се дефинира с пълна рекурсия кога? - дефиниция
Пълната рекурсия запазва примитивната рекурсивност - доказателство

1.7.3
Взаимна рекурсия - дефиниция
Взаимната рекурсия запазва примитивината рекурсивност - доказателство

1.7.4
Итерация на функция - дефиниция
Итерацията запазва примитивината рекурсивност - доказателство


1.8
Кодиране - дефиниция
Ефективно кодиране - дефиниция

1.8.1
Кодиране на наредена двойка - дефиниция и доказателство че е биекция
Декодираща функция - дефиниция
Кодираща тройка - дефиниция
(П, L, R) е примитивно рекурсивна кодираща тройка - доказателство

1.8.2
Кодиране на N^n - дефиниция
Декодираща функция за N^n - дефиниция
Доказателства за примитивна рекурсивност на горните 2
Явен вид на Jn,i

1.8.3
Кодиране на N* - дефиниция и доказателство че е биекция
Декодираща функция за N* - дефиниция
Доказателства за примитивна рекурсивност на горните 2
История на Hf - дефиниция



2.1.1
МНР - дефиниция
Аритметични оператори - дефиниция
Оператори за преход - дефиниция
Адрес на инструкция - значение

2.1.2
Конфигурация - дефиниция
Начална и крайна конфигурация - дефиниция
step(l, ~x) - дефиниция
P(~x) ↑ - дефиниция
P(~x) ↓ y - дефиниция и коректност

2.1.3
Изчислима функция - дефиниция
Cn - дефиниция

2.2.1
Кодиране на инструкция - дефиниция и доказателство че е биекция

2.2.2
Кодиране на програма - дефиниция и доказателство че е биекция

2.2.3
Pa - дефиниция
ϕ (n), a - дефиниция
Индекст на изчислима функция - дефиниция

2.3.1
Универсална функция - деифниция